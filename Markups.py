from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

button_exit = InlineKeyboardButton(text='üö™–í—ã–π—Ç–∏', callback_data='exit')

# –ö–Ω–æ–ø–∫–∞ –ø–æ—Å–ª–µ /start #1
button_what_is_vpn = InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ VPN?', callback_data='what_is_vpn')
markup_what_is_vpn = InlineKeyboardMarkup(row_width=1)
markup_what_is_vpn.insert(button_what_is_vpn)

# –ö–Ω–æ–ø–∫–∞ –ø–æ—Å–ª–µ /start #2
button_why_vpn = InlineKeyboardButton(text='–ó–∞—á–µ–º –Ω—É–∂–µ–Ω VPN?', callback_data='why_vpn')
markup_why_vpn = InlineKeyboardMarkup(row_width=1)
markup_why_vpn.insert(button_why_vpn)

# –ö–Ω–æ–ø–∫–∞ –ø–æ—Å–ª–µ /start #3
button_why_own_vpn = InlineKeyboardButton(text='–ö–∞–∫–∏–µ –µ—Å—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã VPN?', callback_data='why_own_vpn')
markup_why_own_vpn = InlineKeyboardMarkup(row_width=1)
markup_why_own_vpn.insert(button_why_own_vpn)

# –ö–Ω–æ–ø–∫–∞ –ø–æ—Å–ª–µ /start #4
button_price = InlineKeyboardButton(text='–£–∑–Ω–∞—Ç—å —Ä–∞—Å—Ü–µ–Ω–∫–∏', callback_data='price')
markup_price = InlineKeyboardMarkup(row_width=1)
markup_price.insert(button_price)

# –ö–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ /buynew
button_amster = InlineKeyboardButton(text='üá≥üá±–ê–º—Å—Ç–µ—Ä–¥–∞–º', callback_data='amster')
button_moscow = InlineKeyboardButton(text='üá∑üá∫–ú–æ—Å–∫–≤–∞', callback_data='moscow')
markup_city = InlineKeyboardMarkup(row_width=1)
markup_city.add(button_amster, button_moscow, button_exit)


# –í—ã–±–æ—Ä —Å—Ä–æ–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
def period_button(menu_type):
    button_1day = InlineKeyboardButton(text='1 –¥–µ–Ω—å', callback_data='1_day' + menu_type)
    button_1week = InlineKeyboardButton(text='1 –Ω–µ–¥–µ–ª—è', callback_data='1_week' + menu_type)
    button_1month = InlineKeyboardButton(text='1 –º–µ—Å—è—Ü', callback_data='1_month' + menu_type)
    button_6month = InlineKeyboardButton(text='6 –º–µ—Å—è—Ü–µ–≤', callback_data='6_month' + menu_type)
    button_1year = InlineKeyboardButton(text='1 –≥–æ–¥', callback_data='1_year' + menu_type)
    if menu_type == 'New':
        button_back_to_ = InlineKeyboardButton(text='‚è™–ù–∞–∑–∞–¥', callback_data='back_city')
    elif menu_type == 'Extend':
        button_back_to_ = InlineKeyboardButton(text='‚è™–ù–∞–∑–∞–¥', callback_data='back_extend')
    else:
        button_back_to_ = InlineKeyboardButton(text='–ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å', callback_data='Nothing')
    markup_period = InlineKeyboardMarkup(row_width=1)
    markup_period.add(button_1day, button_1week, button_1month, button_6month, button_1year, button_back_to_, button_exit)
    return markup_period


# –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
button_qiwi = InlineKeyboardButton(text='ü•ù–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ Qiwi –≤ —Ä—É–±.', callback_data='qiwi')
button_usdt = InlineKeyboardButton(text='ü™ô–û–ø–ª–∞—Ç–∞ trc-20 –≤ USDT', callback_data='usdt')
button_back_to_period_new = InlineKeyboardButton(text='‚è™–ù–∞–∑–∞–¥', callback_data='back_period_new')
markup_payment_new = InlineKeyboardMarkup(row_width=1)
markup_payment_new.add(button_qiwi, button_usdt, button_back_to_period_new, button_exit)
button_back_to_period_ext = InlineKeyboardButton(text='‚è™–ù–∞–∑–∞–¥', callback_data='back_period_ext')
markup_payment_ext = InlineKeyboardMarkup(row_width=1)
markup_payment_ext.add(button_qiwi, button_usdt, button_back_to_period_ext, button_exit)


# –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É QIWI –∏ –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
def pay_link_button(_url, bill_id):
    button_pay_link = InlineKeyboardButton(text='–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É', url=_url)
    button_payment_status = InlineKeyboardButton(text='üîÑ–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', callback_data='qiwi_check_' + bill_id)
    markup_pay_link = InlineKeyboardMarkup(row_width=1)
    return markup_pay_link.add(button_pay_link, button_payment_status)


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–≤–æ–¥–∞ hash —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø–ª–∞—Ç—ã USDT
def read_hash_usdt(bill_id):
    button_read_hash = InlineKeyboardButton(text='–í–≤–µ—Å—Ç–∏ hash', callback_data='read_hash_' + bill_id)
    markup_read_hash = InlineKeyboardMarkup(row_width=1)
    return markup_read_hash.insert(button_read_hash)


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–≤–æ–¥–∞ hash —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø–ª–∞—Ç—ã USDT
def check_usdt_status(bill_id, _hash):
    button_check_status_usdt = InlineKeyboardButton(text='üîÑ–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏',
                                                    callback_data='usdt_status_' + bill_id)
    button_read_hash_again = InlineKeyboardButton(text='–í–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π hash', callback_data='read_hash_' + bill_id)
    markup_check_status_usdt = InlineKeyboardMarkup(row_width=1)
    return markup_check_status_usdt.add(button_check_status_usdt, button_read_hash_again)


# –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
def extend_buttons(amster_list, moscow_list):
    markup_extend = InlineKeyboardMarkup(row_width=1)
    if len(amster_list) == 0:
        pass
    else:
        for i in amster_list:
            button_amster_vpn = InlineKeyboardButton(text=f'üá≥üá±–ê–º—Å—Ç–µ—Ä–¥–∞–º, –¥–æ: {i[1]}', callback_data='amster_' + str(i[0]))
            markup_extend.add(button_amster_vpn)
    if len(moscow_list) == 0:
        pass
    else:
        for i in moscow_list:
            button_moscow_vpn = InlineKeyboardButton(text=f'üá∑üá∫–ú–æ—Å–∫–≤–∞, –¥–æ: {i[1]}', callback_data='moscow_' + str(i[0]))
            markup_extend.add(button_moscow_vpn)
    return markup_extend.add(button_exit)
